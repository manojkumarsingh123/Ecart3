{
  "_from": "sequelize@5.0.0-beta.11",
  "_id": "sequelize@5.0.0-beta.11",
  "_inBundle": false,
  "_integrity": "sha512-KkLFoderYqCh+VdfGsLlxUwIHQ2HPtsoOvEzAAWTDR30DCLRkklRDU1HddJGnZB5yLhlY0DVSfGJ4kO2wNSvWg==",
  "_location": "/sequelize",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "sequelize@5.0.0-beta.11",
    "name": "sequelize",
    "escapedName": "sequelize",
    "rawSpec": "5.0.0-beta.11",
    "saveSpec": null,
    "fetchSpec": "5.0.0-beta.11"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-5.0.0-beta.11.tgz",
  "_shasum": "1210942670b5e0979fcc58af381e17eb78da4f32",
  "_spec": "sequelize@5.0.0-beta.11",
  "_where": "C:\\Users\\hp\\Desktop\\Ecart",
  "author": {
    "name": "Sascha Depold",
    "email": "sascha@depold.com"
  },
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "contributors": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Jan Aagaard Meier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "Daniel Durante",
      "email": "me@danieldurante.com"
    },
    {
      "name": "Mick Hansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "Sushant Dhiman",
      "email": "sushantdhiman@outlook.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.5.0",
    "cls-bluebird": "^2.1.0",
    "debug": "^3.1.0",
    "depd": "^1.1.0",
    "dottie": "^2.0.0",
    "generic-pool": "^3.4.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.1",
    "moment": "^2.22.2",
    "moment-timezone": "^0.5.21",
    "retry-as-promised": "^3.0.0",
    "semver": "^5.5.0",
    "toposort-class": "^1.0.1",
    "uuid": "^3.2.1",
    "validator": "^10.4.0",
    "wkx": "^0.4.5"
  },
  "deprecated": false,
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@semantic-release/github": "^5.0.0",
    "@semantic-release/npm": "^5.0.2",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.x",
    "chai-spies": "^1.x",
    "cheerio": "^1.0.0-rc.2",
    "commitizen": "^2.x",
    "continuation-local-storage": "^3.x",
    "cross-env": "^5.2.0",
    "cz-conventional-changelog": "^2.x",
    "docdash": "^1.0.0",
    "env-cmd": "^8.0.0",
    "esdoc": "^0.5.2",
    "eslint": "^5.0.0",
    "eslint-plugin-jsdoc": "^3.7.1",
    "eslint-plugin-mocha": "^5.0.0",
    "hints": "^1.x",
    "husky": "^0.x",
    "istanbul": "^0.x",
    "jsdoc": "^3.5.5",
    "lcov-result-merger": "^3.0.0",
    "mocha": "^5.x",
    "mysql2": "^1.x",
    "pg": "^7.x",
    "pg-hstore": "^2.x",
    "pg-native": "^3.0.0",
    "pg-types": "^1.x",
    "rimraf": "^2.x",
    "semantic-release": "^15.8.0",
    "sinon": "^6.0.0",
    "sinon-chai": "^3.2.0",
    "sqlite3": "^4.0.2",
    "tedious": "^2.x",
    "uuid-validate": "^0.0.3",
    "validate-commit-msg": "^2.12.2"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "homepage": "https://github.com/sequelize/sequelize#readme",
  "keywords": [
    "mysql",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "license": "MIT",
  "main": "index",
  "name": "sequelize",
  "options": {
    "env_cmd": "./test/config/.docker.env"
  },
  "publishConfig": {
    "tag": "next"
  },
  "release": {
    "branch": "master",
    "verifyConditions": [
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "commitmsg": "validate-commit-msg",
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --require scripts/mocha-bootload --report lcovonly -- -t 30000 --exit --ui tdd \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --require scripts/mocha-bootload --report lcovonly -- -t 30000 --exit --ui tdd \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "esdoc && cp docs/ROUTER esdoc/ROUTER",
    "generate-jsdocs": "jsdoc -c jsdoc.json",
    "lint": "eslint lib test --quiet",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "semantic-release": "semantic-release",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node -e \"console.log('#'.repeat(process.env.DIALECT.length + 22) + '\\n# Running tests for ' + process.env.DIALECT + ' #\\n' + '#'.repeat(process.env.DIALECT.length + 22))\"",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --ui tdd --exit --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-unit": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --ui tdd --exit --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "version": "5.0.0-beta.11"
}
